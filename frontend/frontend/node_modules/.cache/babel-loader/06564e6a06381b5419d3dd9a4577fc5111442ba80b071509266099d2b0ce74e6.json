{"ast":null,"code":"var _jsxFileName = \"D:\\\\EduBox\\\\frontend\\\\frontend\\\\src\\\\pages\\\\Notes\\\\NotesLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './NotesLogin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesLogin = () => {\n  _s();\n  const [branch, setBranch] = useState(\"\"); // Branch state\n  const [semester, setSemester] = useState(\"\"); // Semester state\n  const [subjects, setSubjects] = useState([]); // Fetched subjects\n  const [modules, setModules] = useState([]); // Modules for a subject\n  const [selectedSubject, setSelectedSubject] = useState(null); // Selected subject\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Error message\n  const [isDataFetched, setIsDataFetched] = useState(false); // Subject fetch status\n  const [dropdownVisible, setDropdownVisible] = useState(false); // Dropdown visibility\n\n  // For Add Unit form\n  const [moduleNo, setModuleNo] = useState(\"\");\n  const [moduleName, setModuleName] = useState(\"\");\n  const [pdfLink, setPdfLink] = useState(\"\");\n\n  // For Add Subject form\n  const [newSubject, setNewSubject] = useState({\n    branch: '',\n    semester: '',\n    subject: ''\n  });\n  const [isAddSubjectVisible, setIsAddSubjectVisible] = useState(false); // Controls visibility of Add Subject form\n\n  // Fetch subjects based on branch and semester\n  const fetchSubjects = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/subjects\", {\n        params: {\n          branch,\n          semester\n        }\n      });\n      setSubjects(response.data); // Update subjects\n      setIsDataFetched(true); // Set fetched flag\n      setErrorMessage(\"\"); // Clear error\n    } catch (error) {\n      console.error(\"Error fetching subjects:\", error);\n      setErrorMessage(\"Failed to fetch subjects. Please try again.\");\n    }\n  };\n\n  // Fetch modules based on branch, semester, and subject\n  const fetchModules = async subjectName => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/unit\", {\n        params: {\n          branch,\n          semester,\n          subject: subjectName\n        }\n      });\n      setModules(response.data); // Update modules\n      setErrorMessage(\"\"); // Clear error\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      setErrorMessage(\"Failed to fetch modules. Please try again.\");\n    }\n  };\n\n  // Add Unit\n  const addUnit = async () => {\n    try {\n      const unitData = {\n        branch,\n        semester,\n        subject: selectedSubject.subject,\n        moduleNo,\n        moduleName,\n        pdfLink\n      };\n      const response = await axios.post(\"http://localhost:8080/api/unit\", unitData);\n      setModules([...modules, response.data]); // Update modules state with newly added unit\n      setModuleNo(\"\");\n      setModuleName(\"\");\n      setPdfLink(\"\");\n      setErrorMessage(\"\"); // Clear error\n    } catch (error) {\n      console.error(\"Error adding unit:\", error);\n      setErrorMessage(\"Failed to add unit. Please try again.\");\n    }\n  };\n\n  // Delete Unit\n  const deleteUnit = async unitId => {\n    try {\n      await axios.delete(`http://localhost:8080/api/unit/${unitId}`);\n      setModules(modules.filter(module => module.id !== unitId)); // Remove deleted unit from state\n      setErrorMessage(\"\"); // Clear error\n    } catch (error) {\n      console.error(\"Error deleting unit:\", error);\n      setErrorMessage(\"Failed to delete unit. Please try again.\");\n    }\n  };\n\n  // Add Subject\n  // Add Subject\n  const handleAddSubject = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/subjects\", newSubject);\n      setSubjects([...subjects, response.data]); // Update subjects list\n      setNewSubject({\n        branch: branch,\n        // Set branch from the selected state\n        semester: semester,\n        // Set semester from the selected state\n        subject: '' // Reset subject input\n      });\n      setErrorMessage(\"\"); // Clear error message\n      // Optionally keep the form open after adding the subject:\n      setIsAddSubjectVisible(true);\n    } catch (error) {\n      console.error(\"Error adding subject:\", error);\n      setErrorMessage(\"Failed to add subject. Please try again.\");\n    }\n  };\n\n  // Delete Subject\n  const deleteSubject = async subjectId => {\n    try {\n      await axios.delete(`http://localhost:8080/api/subjects/${subjectId}`);\n      setSubjects(subjects.filter(subject => subject.id !== subjectId)); // Remove deleted subject from state\n      setErrorMessage(\"\"); // Clear error\n    } catch (error) {\n      console.error(\"Error deleting subject:\", error);\n      setErrorMessage(\"Failed to delete subject. Please try again.\");\n    }\n  };\n  const handleShowSubjects = () => {\n    if (!branch || !semester) {\n      setErrorMessage(\"Please select Branch and Semester to continue.\");\n      setIsDataFetched(false);\n    } else {\n      fetchSubjects();\n      setIsAddSubjectVisible(true); // Show Add Subject form after subjects are fetched\n    }\n  };\n  const handleMoreClick = subject => {\n    if (selectedSubject === subject) {\n      // Toggle visibility if the same subject is clicked again\n      setDropdownVisible(!dropdownVisible);\n    } else {\n      setSelectedSubject(subject);\n      setDropdownVisible(true); // Show dropdown when a new subject is clicked\n      fetchModules(subject.subject); // Use 'subject.subject' to fetch modules\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-admin-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notes-admin-box\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"notes-admin-heading\",\n          children: \"NOTES ADMIN PAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"branch-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"branch-title\",\n        children: \"Select Branch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"branch-buttons\",\n        children: ['CS', 'EC', 'EEE', 'CE', 'AT', 'CH', 'ME', 'PO'].map(branchOption => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setBranch(branchOption),\n          className: `branch-button ${branch === branchOption ? \"selected\" : \"\"}`,\n          children: branchOption\n        }, branchOption, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"semester-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"semester-title\",\n        children: \"Select Semester\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"semester-buttons\",\n        children: ['Sem1', 'Sem2', 'Sem3', 'Sem4', 'Sem5'].map(sem => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSemester(sem),\n          className: `semester-button ${semester === sem ? \"selected\" : \"\"}`,\n          children: sem\n        }, sem, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShowSubjects,\n        className: \"show-subjects-btn\",\n        children: \"Show Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 24\n    }, this), isDataFetched && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subjects-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"subjects-title\",\n        children: \"Available Subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"subjects-list\",\n        children: subjects.length > 0 ? subjects.map(subject => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"subject-item\",\n          children: [subject.subject, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMoreClick(subject),\n            className: \"subject-more-btn\",\n            children: \"More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteSubject(subject.id),\n            className: \"noteslogin-delete-unit-btn\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this), selectedSubject === subject && dropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"module-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Modules for \", subject.subject]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"module-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Module No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Module Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"PDF Link\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: modules.length > 0 ? modules.map((module, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: module.moduleNo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: module.moduleName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: module.pdfLink,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      children: \"View PDF\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => deleteUnit(module.id),\n                      className: \"noteslogin-delete-unit-btn\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 33\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 31\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"4\",\n                    children: \"No modules found\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-unit-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Add New Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Module No\",\n                value: moduleNo,\n                onChange: e => setModuleNo(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Module Name\",\n                value: moduleName,\n                onChange: e => setModuleName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"PDF Link\",\n                value: pdfLink,\n                onChange: e => setPdfLink(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addUnit,\n                className: \"add-unit-btn\",\n                children: \"Add Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 21\n          }, this)]\n        }, subject.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No subjects available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), isAddSubjectVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-subject-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddSubject,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Subject Name\",\n          value: newSubject.subject,\n          onChange: e => setNewSubject({\n            ...newSubject,\n            subject: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Branch\",\n          value: branch // Ensure branch is set here\n          ,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Semester\",\n          value: semester // Ensure semester is set here\n          ,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"add-subject-btn\",\n          children: \"Add Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesLogin, \"Awwsy5cdZ9bnTTV67xHbGqqy8QI=\");\n_c = NotesLogin;\nexport default NotesLogin;\nvar _c;\n$RefreshReg$(_c, \"NotesLogin\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NotesLogin","_s","branch","setBranch","semester","setSemester","subjects","setSubjects","modules","setModules","selectedSubject","setSelectedSubject","errorMessage","setErrorMessage","isDataFetched","setIsDataFetched","dropdownVisible","setDropdownVisible","moduleNo","setModuleNo","moduleName","setModuleName","pdfLink","setPdfLink","newSubject","setNewSubject","subject","isAddSubjectVisible","setIsAddSubjectVisible","fetchSubjects","response","get","params","data","error","console","fetchModules","subjectName","addUnit","unitData","post","deleteUnit","unitId","delete","filter","module","id","handleAddSubject","e","preventDefault","deleteSubject","subjectId","handleShowSubjects","handleMoreClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","branchOption","onClick","sem","length","index","href","target","rel","colSpan","type","placeholder","value","onChange","onSubmit","readOnly","_c","$RefreshReg$"],"sources":["D:/EduBox/frontend/frontend/src/pages/Notes/NotesLogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './NotesLogin.css';\r\n\r\nconst NotesLogin = () => {\r\n  const [branch, setBranch] = useState(\"\"); // Branch state\r\n  const [semester, setSemester] = useState(\"\"); // Semester state\r\n  const [subjects, setSubjects] = useState([]); // Fetched subjects\r\n  const [modules, setModules] = useState([]); // Modules for a subject\r\n  const [selectedSubject, setSelectedSubject] = useState(null); // Selected subject\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Error message\r\n  const [isDataFetched, setIsDataFetched] = useState(false); // Subject fetch status\r\n  const [dropdownVisible, setDropdownVisible] = useState(false); // Dropdown visibility\r\n\r\n  // For Add Unit form\r\n  const [moduleNo, setModuleNo] = useState(\"\");\r\n  const [moduleName, setModuleName] = useState(\"\");\r\n  const [pdfLink, setPdfLink] = useState(\"\");\r\n\r\n  // For Add Subject form\r\n  const [newSubject, setNewSubject] = useState({\r\n    branch: '',\r\n    semester: '',\r\n    subject: ''\r\n  });\r\n\r\n  const [isAddSubjectVisible, setIsAddSubjectVisible] = useState(false); // Controls visibility of Add Subject form\r\n\r\n  // Fetch subjects based on branch and semester\r\n  const fetchSubjects = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8080/api/subjects\", {\r\n        params: { branch, semester },\r\n      });\r\n      setSubjects(response.data); // Update subjects\r\n      setIsDataFetched(true); // Set fetched flag\r\n      setErrorMessage(\"\"); // Clear error\r\n    } catch (error) {\r\n      console.error(\"Error fetching subjects:\", error);\r\n      setErrorMessage(\"Failed to fetch subjects. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Fetch modules based on branch, semester, and subject\r\n  const fetchModules = async (subjectName) => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8080/api/unit\", {\r\n        params: { branch, semester, subject: subjectName },\r\n      });\r\n      setModules(response.data); // Update modules\r\n      setErrorMessage(\"\"); // Clear error\r\n    } catch (error) {\r\n      console.error(\"Error fetching modules:\", error);\r\n      setErrorMessage(\"Failed to fetch modules. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Add Unit\r\n  const addUnit = async () => {\r\n    try {\r\n      const unitData = {\r\n        branch,\r\n        semester,\r\n        subject: selectedSubject.subject,\r\n        moduleNo,\r\n        moduleName,\r\n        pdfLink\r\n      };\r\n      const response = await axios.post(\"http://localhost:8080/api/unit\", unitData);\r\n      setModules([...modules, response.data]); // Update modules state with newly added unit\r\n      setModuleNo(\"\");\r\n      setModuleName(\"\");\r\n      setPdfLink(\"\");\r\n      setErrorMessage(\"\"); // Clear error\r\n    } catch (error) {\r\n      console.error(\"Error adding unit:\", error);\r\n      setErrorMessage(\"Failed to add unit. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Delete Unit\r\n  const deleteUnit = async (unitId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/api/unit/${unitId}`);\r\n      setModules(modules.filter((module) => module.id !== unitId)); // Remove deleted unit from state\r\n      setErrorMessage(\"\"); // Clear error\r\n    } catch (error) {\r\n      console.error(\"Error deleting unit:\", error);\r\n      setErrorMessage(\"Failed to delete unit. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Add Subject\r\n  // Add Subject\r\n  const handleAddSubject = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/api/subjects\", newSubject);\r\n      setSubjects([...subjects, response.data]); // Update subjects list\r\n      setNewSubject({\r\n        branch: branch, // Set branch from the selected state\r\n        semester: semester, // Set semester from the selected state\r\n        subject: '' // Reset subject input\r\n      });\r\n      setErrorMessage(\"\"); // Clear error message\r\n      // Optionally keep the form open after adding the subject:\r\n      setIsAddSubjectVisible(true);\r\n    } catch (error) {\r\n      console.error(\"Error adding subject:\", error);\r\n      setErrorMessage(\"Failed to add subject. Please try again.\");\r\n    }\r\n  };\r\n  \r\n\r\n  // Delete Subject\r\n  const deleteSubject = async (subjectId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/api/subjects/${subjectId}`);\r\n      setSubjects(subjects.filter((subject) => subject.id !== subjectId)); // Remove deleted subject from state\r\n      setErrorMessage(\"\"); // Clear error\r\n    } catch (error) {\r\n      console.error(\"Error deleting subject:\", error);\r\n      setErrorMessage(\"Failed to delete subject. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleShowSubjects = () => {\r\n    if (!branch || !semester) {\r\n      setErrorMessage(\"Please select Branch and Semester to continue.\");\r\n      setIsDataFetched(false);\r\n    } else {\r\n      fetchSubjects();\r\n      setIsAddSubjectVisible(true); // Show Add Subject form after subjects are fetched\r\n    }\r\n  };\r\n\r\n  const handleMoreClick = (subject) => {\r\n    if (selectedSubject === subject) {\r\n      // Toggle visibility if the same subject is clicked again\r\n      setDropdownVisible(!dropdownVisible);\r\n    } else {\r\n      setSelectedSubject(subject);\r\n      setDropdownVisible(true); // Show dropdown when a new subject is clicked\r\n      fetchModules(subject.subject); // Use 'subject.subject' to fetch modules\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"note-container\">\r\n     <div className=\"notes-admin-panel\">\r\n      <div className=\"notes-admin-box\">\r\n        <h1 className=\"notes-admin-heading\">NOTES ADMIN PAGE</h1>\r\n      </div>\r\n    </div>\r\n\r\n      <div className=\"branch-container\">\r\n        <h1 className=\"branch-title\">Select Branch</h1>\r\n        <div className=\"branch-buttons\">\r\n          {['CS', 'EC', 'EEE', 'CE', 'AT', 'CH', 'ME', 'PO'].map((branchOption) => (\r\n            <button\r\n              key={branchOption}\r\n              onClick={() => setBranch(branchOption)}\r\n              className={`branch-button ${branch === branchOption ? \"selected\" : \"\"}`}\r\n            >\r\n              {branchOption}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"semester-container\">\r\n        <h2 className=\"semester-title\">Select Semester</h2>\r\n        <div className=\"semester-buttons\">\r\n          {['Sem1', 'Sem2', 'Sem3', 'Sem4', 'Sem5'].map((sem) => (\r\n            <button\r\n              key={sem}\r\n              onClick={() => setSemester(sem)}\r\n              className={`semester-button ${semester === sem ? \"selected\" : \"\"}`}\r\n            >\r\n              {sem}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"action-buttons\">\r\n        <button onClick={handleShowSubjects} className=\"show-subjects-btn\">\r\n          Show Subjects\r\n        </button>\r\n      </div>\r\n\r\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n      {isDataFetched && (\r\n        <div className=\"subjects-container\">\r\n          <h2 className=\"subjects-title\">Available Subjects</h2>\r\n          <ul className=\"subjects-list\">\r\n            {subjects.length > 0 ? (\r\n              subjects.map((subject) => (\r\n                <li key={subject.id} className=\"subject-item\">\r\n                  {subject.subject}\r\n                  <button \r\n                    onClick={() => handleMoreClick(subject)} \r\n                    className=\"subject-more-btn\"\r\n                  >\r\n                    More\r\n                  </button>\r\n                  <button \r\n                    onClick={() => deleteSubject(subject.id)} \r\n                    className=\"noteslogin-delete-unit-btn\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {selectedSubject === subject && dropdownVisible && (\r\n                    <div className=\"module-dropdown\">\r\n                      <h3>Modules for {subject.subject}</h3>\r\n                      <table className=\"module-table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Module No</th>\r\n                            <th>Module Name</th>\r\n                            <th>PDF Link</th>\r\n                            <th>Actions</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {modules.length > 0 ? (\r\n                            modules.map((module, index) => (\r\n                              <tr key={index}>\r\n                                <td>{module.moduleNo}</td>\r\n                                <td>{module.moduleName}</td>\r\n                                <td>\r\n                                  <a\r\n                                    href={module.pdfLink}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                  >\r\n                                    View PDF\r\n                                  </a>\r\n                                </td>\r\n                                <td>\r\n                                  <button\r\n                                    onClick={() => deleteUnit(module.id)}\r\n                                    className=\"noteslogin-delete-unit-btn\"\r\n                                  >\r\n                                    Delete\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            ))\r\n                          ) : (\r\n                            <tr>\r\n                              <td colSpan=\"4\">No modules found</td>\r\n                            </tr>\r\n                          )}\r\n                        </tbody>\r\n                      </table>\r\n\r\n                      {/* Add Unit Form */}\r\n                      <div className=\"add-unit-form\">\r\n                        <h4>Add New Unit</h4>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Module No\"\r\n                          value={moduleNo}\r\n                          onChange={(e) => setModuleNo(e.target.value)}\r\n                        />\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Module Name\"\r\n                          value={moduleName}\r\n                          onChange={(e) => setModuleName(e.target.value)}\r\n                        />\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"PDF Link\"\r\n                          value={pdfLink}\r\n                          onChange={(e) => setPdfLink(e.target.value)}\r\n                        />\r\n                        <button onClick={addUnit} className=\"add-unit-btn\">\r\n                          Add Unit\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <div>No subjects available</div>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n{isAddSubjectVisible && (\r\n  <div className=\"add-subject-form\">\r\n    <h2>Add Subject</h2>\r\n    <form onSubmit={handleAddSubject}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Subject Name\"\r\n        value={newSubject.subject}\r\n        onChange={(e) => setNewSubject({ ...newSubject, subject: e.target.value })}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Branch\"\r\n        value={branch} // Ensure branch is set here\r\n        readOnly\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Semester\"\r\n        value={semester} // Ensure semester is set here\r\n        readOnly\r\n      />\r\n      <button type=\"submit\" className=\"add-subject-btn\">\r\n        Add Subject\r\n      </button>\r\n    </form>\r\n  </div>\r\n)}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}